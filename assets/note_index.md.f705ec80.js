import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.686af137.js";const p="/tool-kit/note/oauth_app1.png",e="/tool-kit/note/oauth_app2.png",o="/tool-kit/note/oauth_app3.png",g=JSON.parse('{"title":"vitePress快速搭建及部署一个博客","description":"","frontmatter":{},"headers":[],"relativePath":"note/index.md","filePath":"note/index.md","lastUpdated":1701070708000}'),t={name:"note/index.md"},r=l('<h1 id="vitepress快速搭建及部署一个博客" tabindex="-1">vitePress快速搭建及部署一个博客 <a class="header-anchor" href="#vitepress快速搭建及部署一个博客" aria-label="Permalink to &quot;vitePress快速搭建及部署一个博客&quot;">​</a></h1><h2 id="集成评论功能" tabindex="-1">集成评论功能 <a class="header-anchor" href="#集成评论功能" aria-label="Permalink to &quot;集成评论功能&quot;">​</a></h2><ul><li><p>首先要创建一个<strong>OAuth App</strong>（获取Client ID 和 Client secrets）</p></li><li><p>接着选择适合自己的评论插件接入 （这个示例中我选用的是<strong>Gitalk</strong>，一个基于 GitHub Issue 和 Preact 开发的评论插件。 ）</p></li><li><p>调试</p></li></ul><h3 id="创建一个oauth-app" tabindex="-1">创建一个OAuth App <a class="header-anchor" href="#创建一个oauth-app" aria-label="Permalink to &quot;创建一个OAuth App&quot;">​</a></h3><ol><li>来到 <a href="https://github.com/settings/applications/new" target="_blank" rel="noreferrer">Github Application</a> 创建页面</li></ol><div class="tip custom-block"><p class="custom-block-title">OAuth App</p><p>点击Github的主页用户头像-&gt;Settings-&gt;Developer settings-&gt;OAuth Apps-&gt;New Github App 即可进入到创建Github App的页面</p></div><p><img src="'+p+'" alt="OAuth App"></p><ol start="2"><li>配置参数注册 OAuth</li></ol><div class="tip custom-block"><p class="custom-block-title">温馨提示</p><p>将 Homepage URL 和 Authorization callback URL 设置为你的网站 URL （这里我们用 本地地址 作为示例进行调试，线上的时候记得换回线上网站的url）</p><p>Authorization callback URL 回调地址，如果没有后端服务的话直接填首页地址</p></div><p><img src="'+e+'" alt="OAuth App"></p><ol start="3"><li>查看生成的 Client ID 和 Client secrets</li></ol><p>获取相应的并得到了相应的 Client ID 和 Client Secret。</p><p><img src="'+o+`" alt="OAuth App"></p><p>保存你的 Client ID 和 Client secrets,后面会用到</p><h3 id="引入-gitalk" tabindex="-1">引入 <a href="https://github.com/gitalk/gitalk" target="_blank" rel="noreferrer">Gitalk</a> <a class="header-anchor" href="#引入-gitalk" aria-label="Permalink to &quot;引入 [Gitalk](https://github.com/gitalk/gitalk)&quot;">​</a></h3><ul><li>在doc目录下，安装Gitalk</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gitalk</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gitalk</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>在.vitepress/theme/layout创建一个新组件 Comment.vue(名字可以自己起)</li></ul><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">//theme/Layout/comment</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;content-container&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setup</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lang</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;ts&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { watch, nextTick, onMounted, ref } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;gitalk/dist/gitalk.css&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//引入 gitalk 的 css 样式</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Gitalk </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;gitalk&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { useRouter } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vitepress&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { inBrowser } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vitepress&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> { route } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">useRouter</span><span style="color:#E1E4E8;">() </span><span style="color:#6A737D;">// 页面路由对象</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">options</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    id: route.data.title, </span><span style="color:#6A737D;">// 可选，推荐设置为页面标题，因为会作为标签传给Github issues，且issues标签有长度限制。</span></span>
<span class="line"><span style="color:#E1E4E8;">    owner: </span><span style="color:#9ECBFF;">&#39;xxxx&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// GitHub repository 所有者</span></span>
<span class="line"><span style="color:#E1E4E8;">    repo: </span><span style="color:#9ECBFF;">&#39;xxxx&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// GitHub repository</span></span>
<span class="line"><span style="color:#E1E4E8;">    clientID: </span><span style="color:#9ECBFF;">&#39;xxxxx&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 自己的clientID</span></span>
<span class="line"><span style="color:#E1E4E8;">    clientSecret: </span><span style="color:#9ECBFF;">&#39;xxxxx&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 自己的clientSecret</span></span>
<span class="line"><span style="color:#E1E4E8;">    admin: [</span><span style="color:#9ECBFF;">&#39;xxxx&#39;</span><span style="color:#E1E4E8;">], </span><span style="color:#6A737D;">// GitHub repository 所有者</span></span>
<span class="line"><span style="color:#E1E4E8;">    labels: [</span><span style="color:#9ECBFF;">&#39;Gitalk&#39;</span><span style="color:#E1E4E8;">], </span><span style="color:#6A737D;">// GitHub issue 的标签</span></span>
<span class="line"><span style="color:#E1E4E8;">    createIssueManually: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//如果当前页面没有相应的 isssue 且登录的用户属于 admin，则会自动创建 issue。如果设置为 true，则显示一个初始化页面，创建 issue 需要点击 init 按钮。</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//如果在浏览器环境</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (inBrowser) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">watch</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">            () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> route.path, </span><span style="color:#6A737D;">// 监听路由变化，重新挂载评论组件</span></span>
<span class="line"><span style="color:#E1E4E8;">            () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">nextTick</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> window </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">wrap</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">createElement</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;div&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                        wrap.</span><span style="color:#B392F0;">setAttribute</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;gitalk-page-container&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">comment</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">querySelector</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#9ECBFF;">&#39;.content-container&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        ) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HTMLElement</span></span>
<span class="line"><span style="color:#E1E4E8;">                        comment.</span><span style="color:#B392F0;">appendChild</span><span style="color:#E1E4E8;">(wrap) </span><span style="color:#6A737D;">// 把组件加入到想加载的地方</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">gitTalk</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Gitalk</span><span style="color:#E1E4E8;">(options)</span></span>
<span class="line"><span style="color:#E1E4E8;">                        gitTalk.</span><span style="color:#B392F0;">render</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;gitalk-page-container&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                    }</span></span>
<span class="line"><span style="color:#E1E4E8;">                })</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">            { immediate: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">onMounted</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">//theme/Layout/comment</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;content-container&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setup</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;ts&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { watch, nextTick, onMounted, ref } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;gitalk/dist/gitalk.css&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//引入 gitalk 的 css 样式</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Gitalk </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;gitalk&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { useRouter } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vitepress&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { inBrowser } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vitepress&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> { route } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">useRouter</span><span style="color:#24292E;">() </span><span style="color:#6A737D;">// 页面路由对象</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">options</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    id: route.data.title, </span><span style="color:#6A737D;">// 可选，推荐设置为页面标题，因为会作为标签传给Github issues，且issues标签有长度限制。</span></span>
<span class="line"><span style="color:#24292E;">    owner: </span><span style="color:#032F62;">&#39;xxxx&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// GitHub repository 所有者</span></span>
<span class="line"><span style="color:#24292E;">    repo: </span><span style="color:#032F62;">&#39;xxxx&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// GitHub repository</span></span>
<span class="line"><span style="color:#24292E;">    clientID: </span><span style="color:#032F62;">&#39;xxxxx&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 自己的clientID</span></span>
<span class="line"><span style="color:#24292E;">    clientSecret: </span><span style="color:#032F62;">&#39;xxxxx&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 自己的clientSecret</span></span>
<span class="line"><span style="color:#24292E;">    admin: [</span><span style="color:#032F62;">&#39;xxxx&#39;</span><span style="color:#24292E;">], </span><span style="color:#6A737D;">// GitHub repository 所有者</span></span>
<span class="line"><span style="color:#24292E;">    labels: [</span><span style="color:#032F62;">&#39;Gitalk&#39;</span><span style="color:#24292E;">], </span><span style="color:#6A737D;">// GitHub issue 的标签</span></span>
<span class="line"><span style="color:#24292E;">    createIssueManually: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//如果当前页面没有相应的 isssue 且登录的用户属于 admin，则会自动创建 issue。如果设置为 true，则显示一个初始化页面，创建 issue 需要点击 init 按钮。</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">init</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//如果在浏览器环境</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (inBrowser) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">watch</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">            () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> route.path, </span><span style="color:#6A737D;">// 监听路由变化，重新挂载评论组件</span></span>
<span class="line"><span style="color:#24292E;">            () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">nextTick</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> window </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">wrap</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">createElement</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;div&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                        wrap.</span><span style="color:#6F42C1;">setAttribute</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;gitalk-page-container&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">comment</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">querySelector</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#032F62;">&#39;.content-container&#39;</span></span>
<span class="line"><span style="color:#24292E;">                        ) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HTMLElement</span></span>
<span class="line"><span style="color:#24292E;">                        comment.</span><span style="color:#6F42C1;">appendChild</span><span style="color:#24292E;">(wrap) </span><span style="color:#6A737D;">// 把组件加入到想加载的地方</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">gitTalk</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Gitalk</span><span style="color:#24292E;">(options)</span></span>
<span class="line"><span style="color:#24292E;">                        gitTalk.</span><span style="color:#6F42C1;">render</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;gitalk-page-container&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                    }</span></span>
<span class="line"><span style="color:#24292E;">                })</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">            { immediate: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">        )</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">onMounted</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">init</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><blockquote><p>注意是否在浏览器环境，不然在我们打包的时候找不到 document 会打包失败</p></blockquote><ul><li>完成后在 Index.vue 中引入，通过 Layout 的 插槽 将 Comment 组件注入。</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">//theme/Layout/index</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;script setup lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">import { useData } from &#39;vitepress&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">import DefaultTheme from &#39;vitepress/theme&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">import Comment from &#39;./Comment.vue&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;/script&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;template&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">    &lt;DefaultTheme.Layout&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">        &lt;template #doc-after&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">            &lt;Comment /&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">        &lt;/template&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">    &lt;/DefaultTheme.Layout&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;/template&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">//theme/Layout/index</span></span>
<span class="line"><span style="color:#24292e;">&lt;script setup lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span style="color:#24292e;">import { useData } from &#39;vitepress&#39;</span></span>
<span class="line"><span style="color:#24292e;">import DefaultTheme from &#39;vitepress/theme&#39;</span></span>
<span class="line"><span style="color:#24292e;">import Comment from &#39;./Comment.vue&#39;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/script&gt;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">&lt;template&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;DefaultTheme.Layout&gt;</span></span>
<span class="line"><span style="color:#24292e;">        &lt;template #doc-after&gt;</span></span>
<span class="line"><span style="color:#24292e;">            &lt;Comment /&gt;</span></span>
<span class="line"><span style="color:#24292e;">        &lt;/template&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;/DefaultTheme.Layout&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/template&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="调试" tabindex="-1">调试 <a class="header-anchor" href="#调试" aria-label="Permalink to &quot;调试&quot;">​</a></h3><p>集成评论准备工作已经做完，接下来，调试看看效果</p><h2 id="参考文章" tabindex="-1">参考文章 <a class="header-anchor" href="#参考文章" aria-label="Permalink to &quot;参考文章&quot;">​</a></h2><ul><li><a href="https://www.helloworld.net/p/7045899228" target="_blank" rel="noreferrer">VitePress 使用 Gitalk 添加评论功能</a></li><li><a href="https://juejin.cn/post/7250834083046621241" target="_blank" rel="noreferrer">快速给个人网站集成评论功能</a></li></ul>`,26),c=[r];function i(E,y,u,m,b,d){return n(),a("div",null,c)}const h=s(t,[["render",i]]);export{g as __pageData,h as default};

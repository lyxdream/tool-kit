
#
name: Deploy VitePress site to Pages

on:
  # Runs on pushes targeting the `main` branch. Change this to `master` if you're
  # using the `master` branch as the default branch.
  push:
    branches: main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
       # 拉取代码
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Not needed if lastUpdated is not enabled
        # 安装 pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
        # 设置 node 版本    
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm # or pnpm / yarn
      #此操作有助于支持从任何静态站点生成器部署到 GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Install dependencies
        run: |
          cd ./docs
          pnpm install --frozen-lockfile
        # 打包静态文件
      - name: Build
        run: |
          echo ${{ github.workspace }} 
          pnpm run docs:deploy
      #此操作有助于支持从任何静态站点生成器部署到 GitHub Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./docs/.vitepress/dist

  # Deployment job
  deploy:
    # environment:
    #   name: github-pages
    #   url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.3.4
        with:
          # GitHub 密钥
          token: ${{ secrets.ACCESS_TOKEN }}
           # GitHub Pages 读取的分支
          branch: gh-pages
          # 静态文件所在目录
          folder: docs/.vitepress/dist




